{"version":3,"sources":["webpack:///./src/pages/escritos.js","webpack:///./src/components/bloglist.js","webpack:///./src/components/blogitem.js"],"names":["EscritosPage","data","posts","postList","escritosPage","frontmatter","title","shareTitle","description","shareDescription","__html","html","language","og","type","dangerouslySetInnerHTML","map","post","hideDescription","path","fields","key","showLastMod","showDescription","pageLanguage","query","BlogList","styled","ol","localizedStrings","es","from","last_updated_on","en","ListItem","li","rhythm","ArtLink","withColors","c","focus","accent","pure","Link","props","colors","Meta","div","WhiteBreak","span","media","tablet","LastModifiedAt","lastModifiedAt","dateTime","BlogItem","createdAt","createdAtString","to","lang"],"mappings":"yOA2FeA,UAjFM,SAAC,GAAD,QACnBC,KACcC,EAFK,EAEjBC,SAAYD,MAFK,IAGjBE,aAHiB,IAIfC,YAJe,IAKbC,aALa,MAKL,WALK,EAMbC,EANa,EAMbA,WACAC,EAPa,EAObA,YACAC,EARa,EAQbA,iBAEIC,EAVS,EAUfC,KAVe,OAcnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEL,MAAOA,EACPE,YAAaA,EACbI,SAAU,KACVC,GAAI,CACFP,MAAOC,GAAcD,EACrBQ,KAAM,OACNN,YAAaC,GAAoBD,KAGrC,8BACE,kBAAC,IAAD,KACE,gCACE,4BAAKF,GACL,yBAAKS,wBAAyB,CAAEL,aAElC,kBAAC,IAAD,KACGR,EAAMc,KACL,oBACEC,KADF,IAEIZ,YAAea,EAFnB,EAEmBA,gBAAiBC,EAFpC,EAEoCA,KAASd,EAF7C,0CAGIe,EAHJ,EAGIA,OAHJ,OAME,kBAAC,IAAD,eACEC,IAAKF,EACLA,KAAMA,EACNG,aAAa,EACbC,iBAAkBL,EAClBM,aAAc,MACVnB,EACAe,YAqCb,IAAMK,EAAK,c,kCC7FlB,IAEMC,EAFN,UAEiBC,QAAOC,GAAV,yEAAGD,CAAH,+BAKCD,O,8OCEf,IAAMG,EAAmB,CACvBC,GAAI,CACFC,KAAM,UACNC,gBAAiB,2BAEnBC,GAAI,CACFF,KAAM,UACNC,gBAAiB,oBAIfE,EAAWP,UAAOQ,GAAV,qEAAGR,CAAH,+BACFS,YAAO,IAMbC,EAAUC,aACd,SAACC,GAAD,MAAQ,CAAEC,MAAOD,EAAEE,OAAOC,QAC1Bf,kBAAOgB,QAFiB,oEAExBhB,CAFwB,+CAMX,SAACiB,GAAD,OAAWA,EAAMC,OAAOL,UAKjCM,EAAOnB,UAAOoB,IAAV,iEAAGpB,CAAH,kBAIJqB,EAAarB,UAAOsB,KAAV,uEAAGtB,CAAH,8CAKZuB,IAAMC,OALM,MAUVC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBzC,EAAnB,EAAmBA,SAAnB,OACrB,oCACE,kBAACoC,EAAD,MACA,8BAAOnB,EAAiBjB,GAAUoB,iBAClC,mCACA,0BAAMsB,SAAUD,GAAiBA,GACjC,qCAqDWE,IA7CE,SAAC,GAAD,IACfF,EADe,EACfA,eACAG,EAFe,EAEfA,UACAC,EAHe,EAGfA,gBACAtC,EAJe,EAIfA,KACAb,EALe,EAKfA,MACAE,EANe,EAMfA,YACAI,EAPe,EAOfA,SACAY,EARe,EAQfA,aARe,IASfF,mBATe,aAUfC,uBAVe,gBAYf,kBAACW,EAAD,KACE,iCACE,kBAACG,EAAD,CAASqB,GAAIvC,GACX,gCACE,wBAAIwC,KAAM/C,GAAWN,GACrB,kBAACwC,EAAD,KACE,8BAAOjB,EAAiBL,GAAcO,MACtC,mCACA,0BAAMuB,SAAUE,GAAYC,GAC5B,mCACCnC,GACC,kBAAC8B,EAAmB,CAAEC,iBAAgBzC,SAAUY,MAIrDD,GAAmB,6BAAMf","file":"component---src-pages-escritos-js-9c1b0882b7cfad3cabac.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"components/layout\";\nimport BlogItem from \"components/blogitem\";\nimport BlogList from \"components/bloglist\";\nimport SEO from \"components/seo\";\nimport TextBody from \"components/textbody\";\n\nconst EscritosPage = ({\n  data: {\n    postList: { posts },\n    escritosPage: {\n      frontmatter: {\n        title = \"Escritos\",\n        shareTitle,\n        description,\n        shareDescription,\n      },\n      html: __html,\n    },\n  },\n}) => (\n  <Layout>\n    <SEO\n      title={title}\n      description={description}\n      language={\"es\"}\n      og={{\n        title: shareTitle || title,\n        type: \"blog\",\n        description: shareDescription || description,\n      }}\n    />\n    <main>\n      <TextBody>\n        <header>\n          <h1>{title}</h1>\n          <div dangerouslySetInnerHTML={{ __html }} />\n        </header>\n        <BlogList>\n          {posts.map(\n            ({\n              post: {\n                frontmatter: { hideDescription, path, ...frontmatter },\n                fields,\n              },\n            }) => (\n              <BlogItem\n                key={path}\n                path={path}\n                showLastMod={false}\n                showDescription={!hideDescription}\n                pageLanguage={\"es\"}\n                {...frontmatter}\n                {...fields}\n              />\n            )\n          )}\n        </BlogList>\n      </TextBody>\n    </main>\n  </Layout>\n);\n\nEscritosPage.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        defaultLanguage: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n    postList: PropTypes.shape({\n      posts: PropTypes.array,\n    }),\n    escritosPage: PropTypes.shape({\n      html: PropTypes.string,\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        shareTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n        description: PropTypes.string,\n        shareDescription: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.bool,\n        ]),\n      }),\n    }),\n  }),\n};\n\nexport default EscritosPage;\n\nexport const query = graphql`\n  {\n    escritosPage: markdownRemark(frontmatter: { path: { eq: \"/escritos\" } }) {\n      frontmatter {\n        title\n        shareTitle\n        description\n        shareDescription\n      }\n      html\n    }\n\n    postList: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        frontmatter: {\n          type: { eq: \"escrito\" }\n          path: { regex: \"/.+/\" }\n          date: { ne: null }\n        }\n      }\n    ) {\n      posts: edges {\n        post: node {\n          fields {\n            lastModifiedAt(formatString: \"YYYY-MM-DD\")\n            language\n          }\n          frontmatter {\n            createdAtString: date(fromNow: true, locale: \"es\")\n            createdAt: date(formatString: \"YYYY-MM-DD\")\n            title\n            path\n            description\n            hideDescription\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nconst BlogList = styled.ol`\n  margin: 0;\n  list-style: none;\n`;\n\nexport default BlogList;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport media from \"utils/media\";\nimport withColors from \"components/withcolors\";\nimport { rhythm } from \"utils/typography\";\n\nconst localizedStrings = {\n  es: {\n    from: \"Escrito\",\n    last_updated_on: \"Última actualización en\",\n  },\n  en: {\n    from: \"Written\",\n    last_updated_on: \"Last updated on\",\n  },\n};\n\nconst ListItem = styled.li`\n  margin: ${rhythm(1)} 0;\n  h2 {\n    margin: 0;\n  }\n`;\n\nconst ArtLink = withColors(\n  (c) => ({ focus: c.accent.pure }),\n  styled(Link)`\n    color: inherit;\n    &:hover,\n    &:focus {\n      color: ${(props) => props.colors.focus};\n    }\n  `\n);\n\nconst Meta = styled.div`\n  opacity: 0.7;\n`;\n\nconst WhiteBreak = styled.span`\n  &::before {\n    content: \" \";\n    display: block;\n  }\n  ${media.tablet`\n    &::before {display: inline;}\n  `};\n`;\n\nconst LastModifiedAt = ({ lastModifiedAt, language }) => (\n  <>\n    <WhiteBreak />\n    <span>{localizedStrings[language].last_updated_on}</span>\n    <span> </span>\n    <time dateTime={lastModifiedAt}>{lastModifiedAt}</time>\n    <span>.</span>\n  </>\n);\nLastModifiedAt.propTypes = {\n  lastModifiedAt: PropTypes.string.isRequired,\n  language: PropTypes.string.isRequired,\n};\n\nconst BlogItem = ({\n  lastModifiedAt,\n  createdAt,\n  createdAtString,\n  path,\n  title,\n  description,\n  language,\n  pageLanguage,\n  showLastMod = true,\n  showDescription = true,\n}) => (\n  <ListItem>\n    <article>\n      <ArtLink to={path}>\n        <header>\n          <h2 lang={language}>{title}</h2>\n          <Meta>\n            <span>{localizedStrings[pageLanguage].from}</span>\n            <span> </span>\n            <time dateTime={createdAt}>{createdAtString}</time>\n            <span>.</span>\n            {showLastMod && (\n              <LastModifiedAt {...{ lastModifiedAt, language: pageLanguage }} />\n            )}\n          </Meta>\n        </header>\n        {showDescription && <div>{description}</div>}\n      </ArtLink>\n    </article>\n  </ListItem>\n);\nBlogItem.propTypes = {\n  lastModifiedAt: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  createdAtString: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  language: PropTypes.string.isRequired,\n  pageLanguage: PropTypes.string.isRequired,\n  showLastMod: PropTypes.bool,\n  showDescription: PropTypes.bool,\n};\n\nexport default BlogItem;\n"],"sourceRoot":""}